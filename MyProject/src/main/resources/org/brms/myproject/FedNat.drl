package org.brms.myproject;
//approve 0<=age<=49
rule "FedNat: Approve age of construction"
when
am:FedNat(((2018-yearBuilt)>-1)&&((2018-yearBuilt)<50))
then
System.out.println("@FedNat: Age of building");
end
//submit age>49
rule "FedNat: Submit age of construction"
when
am:FedNat((2018-yearBuilt)>50)
then
System.out.println("!FedNat: Age of building");
end
//Decline not applicable

//Approve and submit NA
//Decline if LLC 
rule "FedNat: Check whether LLC or Corporate Ownership"
when	
FedNat(LLC=="yes")	
then
System.out.println("#FedNat: LLC or Corporate ownership");
end

//Approve other structures
//Submit and decline NA
rule "FedNat: Check for the garage type to get other structure eligibilty"
when
FedNat((GarageType=="detachedSeperatedtructureWithoutLivingSpace")||(GarageType=="attachedToTheMainHouse"))
then
System.out.println("@FedNat: Other Structure limit eligible");
end

//approve alarm true
rule "FedNat: Approve seasonal occupany"
when
FedNat((alarm==true)||(secured_community=="Single Entry into the community"))
then
System.out.println("@FedNat: Secondary/Seasonal Occupancy");
end
//submit NA
//decline alarm false
rule "FedNat: Decline seasonal occupany"
when
FedNat((alarm!=true)&&(secured_community!="Single Entry into the community"))
then
System.out.println("#FedNat: Secondary/Seasonal Occupancy");
end

//Approve 0-16
rule "FedNat: Approve Composition Shingle"
when
FedNat((RoofMaterial=="Comp_Shingle")&&((2018-roofUpdateYear)>-1)&&((2018-roofUpdateYear)<16))	
then
System.out.println("@FedNat: Roof material: Composition Shingle eligible");
end
//submit na
//decline
rule "FedNat: Decline Composition Shingle roof"
when
FedNat((RoofMaterial=="Comp_Shingle")&&((2018-roofUpdateYear)>16))	
then
System.out.println("#FedNat: Roof material: Composition Shingle");
end

// approve 0-20
rule "FedNat: Approve Architectual Shingle roof"
when
FedNat((RoofMaterial=="architectural-shingles")&&((2018-roofUpdateYear)>-1)&&((2018-roofUpdateYear)<21))
then
System.out.println("@FedNat: Roof material: Architectual Shingle");
end
//submit na
//decline >20
rule "FedNat: Decline Architectual Shingle roof"
when
FedNat((RoofMaterial=="architectural-shingles")&&((2018-roofUpdateYear)>20))
then
System.out.println("#FedNat: Roof material: Architectual Shingle");
end

//approve 0-40
rule "FedNat: Approve Metal roof"
when
FedNat((RoofMaterial=="metal")&&((2018-roofUpdateYear)>-1)&&((2018-roofUpdateYear)<41))
then
System.out.println("@FedNat: Roof material: Metal");
end
//submit >40
rule "FedNat: Decline Metal roof"
when
FedNat((RoofMaterial=="metal")&&((2018-roofUpdateYear)>40))
then
System.out.println("#FedNat: Roof material: Metal");
end
//decline NA


//approve 1-40
rule "FedNat: Approve Tiles roof"
when
FedNat((RoofMaterial=="block-tiles")&&((2018-roofUpdateYear)>-1)&&((2018-roofUpdateYear)<41))
then
System.out.println("@FedNat: Roof material: Tiles");
end
//submit >40
rule "FedNat: Decline Tiles roof"
when
FedNat((RoofMaterial=="block-tiles")&&((2018-roofUpdateYear)>40))
then
System.out.println("!FedNat: Roof material: Tiles");
end
//decline NA


// 100 % approve
rule "FedNat: Approve flat roof percentage"
when
FedNat(flatRoofPercent=="75 - 100%")
then
System.out.println("#FedNat: Flat roof percentage");
end
//Submit and decline N/A


//approve NA
//submit NA
//decline if in list
rule "FedNat: Decline dog breeds"
when
d:Dog((dogBreed=="Akita")||(dogBreed=="American Bull Dog")||(dogBreed=="Beauceron")||(dogBreed=="Caucasian Mountain Dog")||(dogBreed=="Chows Chows")||(dogBreed=="Doberman Pinschers")||(dogBreed=="German Shepherd")||(dogBreed=="Great Dane")||(dogBreed=="Keeshonds")||(dogBreed=="Pit Bulls")||(dogBreed=="Prea Canarios")||(dogBreed=="Rottweilers")||(dogBreed=="Staffordshire Terriers"))
then
System.out.println("#FedNat: Dog breeds");
end

//Approve == yes
//Submit and decline NA
rule "Approve diving board"
when	
FedNat(DivingBoard=="yes")
then
System.out.println("@FedNat: Diving board");
end

//Approve == yes
//Submit and decline NA
rule "Approve pool slide"
when
FedNat(PoolSlide=="yes")
then
System.out.println("@FedNat: PoolSlide");
end

//Approve true trampoline with fence
rule "FedNat: Approve fencedtrampoline and is it fenced"
when	
FedNat((Trampoline==true)&&(Trampolinefence=="yes"))	
then
System.out.println("@FedNat: Fenced Trampoline");
end
//Submit NA
//decline not fenced trampoline
rule "FedNat: Decline trampoline is not fenced" 
when	
tr:FedNat((Trampoline==false)||(Trampolinefence!="yes"))	
then
System.out.println("#FedNat: Trampoline not fenced");
end


//Approve duplex
rule "FedNat: Approve duplex structure"
when
FedNat(structureType=="Duplex")	
then
System.out.println("@FedNat: Duplex structure");
end
//Submit and decline NA

//Approve Masonry to Frame Ratio  : 33 1/3% classified as masonry
rule "FedNat: Approve masonary to frame ratio"
when	
FedNat(masonryFrame=="Masonry 76% or more - Frame 24%")
then
System.out.println("@FedNat: Masonary frame ratio");
end
//submit and decline NA

//Approve rented living structure
rule "FedNat:Approve rented living structure" 
when
FedNat(rentedStructure=="yes")
then
System.out.println("@FedNat: Rented living space detached");
end
//Submit and decline NA
 

